/* PAGE-SPECIFIC STYLES FOR THE ABOUT PAGE */



/*-- -------------------------- -->
<---   Side By Side Reverse     -->
<--- -------------------------- -*/

/* Mobile - 360px */
@media only screen and (min-width: 0rem) {
 
    #sbsr-1126 {
        padding: var(--sectionPadding);
        padding-top:200px;
        position: relative;
        z-index: 1;

        .cs-container {
            width: 100%;
            /* changes to 1280px at desktop */
            max-width: calc(550 / 16 * 1rem);
            margin: auto;
            display: flex;
            flex-direction: column;
            align-items: center;
            gap: calc(48 / 16 * 1rem);
        }

        .cs-content {
            /* set text align to left if content needs to be left aligned */
            text-align: left;
            width: 100%;
            max-width: calc(522 / 16 * 1rem);
            display: flex;
            flex-direction: column;
            /* centers content horizontally, set to flex-start to left align */
            align-items: flex-start;
        }
    
        .cs-topper {
            font-size: var(--topperFontSize);
            line-height: 1.2em;
            text-transform: uppercase;
            text-align: inherit;
            letter-spacing: .1em;
            font-weight: 700;
            color: var(--primary);
            margin-bottom: calc(4 / 16 * 1rem);
            display: block;
        }
    
        .cs-title {
            font-size: var(--headerFontSize);
            font-weight: 900;
            line-height: 1.2em;
            text-align: inherit;
            max-width: calc(700 / 16 * 1rem);
            margin: 0 0 calc(16 / 16 * 1rem) 0;
            color: var(--headerColor);
            position: relative;
        }
    
        .cs-text {
            font-size: var(--bodyFontSize);
            line-height: 1.5em;
            text-align: inherit;
            width: 100%;
            max-width: calc(650 / 16 * 1rem);
            margin: 0;
            color: var(--bodyTextColor);
        }

        .cs-topper {
            /* Override.  cs-topper cs-title and first cs-text should be removed and put into your global css sheet so it can control every instance of them on your site and is consistent. This selector is a section specific override that stays inside this stitch */
            color: #767676;
        }

        .cs-text {
            /* Override.  cs-topper cs-title and first cs-text should be removed and put into your global css sheet so it can control every instance of them on your site and is consistent. This selector is a section specific override that stays inside this stitch */
            margin-bottom: calc(16 / 16 * 1rem);
            &:last-of-type {
                margin-bottom: calc(32 / 16 * 1rem);
            }
        }

        .cs-ul {
            width: 100%;
            margin: 0 0 calc(32 / 16 * 1rem) 0;
            padding-left: calc(20 / 16 * 1rem);
            /* prevents padding from affecting width and height */
            box-sizing: border-box;
            display: flex;
            flex-direction: column;
            align-items: flex-start;
            gap: calc(8 / 16 * 1rem);
        }

        .cs-li {
            font-size: var(--bodyFontSize);
            line-height: 1.5em;
            list-style: none;
            text-align: left;
            width: 100%;
            max-width: calc(400 / 16 * 1rem);
            margin: 0;
            color: var(--bodyTextColor);
            position: relative;

            &:before {
                /* bullet */
                content: '';
                width: 4px;
                height: 4px;
                border-radius: 50%;
                background: currentColor;
                opacity: 1;
                position: absolute;
                display: block;
                top: calc(10 / 16 * 1rem);
                left: calc(-15 / 16 * 1rem);
            }
        }

        .cs-button-solid {
            font-size: calc(16 / 16 * 1rem);
            /* 46px - 56px */
            line-height: clamp(2.875rem, 5.5vw, 3.5rem);
            text-decoration: none;
	    	font-weight: 700;
	        text-align: center;
            margin: 0;
            color: #fff;
            min-width: calc(200 / 16 * 1rem);
            padding: 0 calc(24 / 16 * 1rem);
            background-color: var(--primary);
            border-radius: calc(8 / 16 * 1rem);
            display: inline-block;
            position: relative;
            z-index: 1;
            /* prevents padding from adding to the width */
            box-sizing: border-box;

            &:before {
                content: '';
                position: absolute;
                height: 100%;
                width: 0%;
                background: #000;
                opacity: 1;
                top: 0;
                left: 0;
                z-index: -1;
                border-radius: calc(8 / 16 * 1rem);
                transition: width .3s;
            }

            &:hover {
                &:before {
                    width: 100%;
                }
            }
        }

        .cs-image-group {
            /* scaling entire section down. font-size starts at a min in vw, and stops when that value reaches 1em (16px). Since we want the picture elements to base their font size on the parent and not the root, we use ems for this entire section  */
            font-size: min(1.9vw, .64em);
            width: calc(657 / 16 * 1em);
            height: calc(676 / 16 * 1em);
            /* offset the amount the cs-graphic overflows the container so it stays centerd on mobile and tablet, removed at desktop */
            margin-right: calc(108 / 16 * 1em);
            position: relative;
            z-index: 1;
        }

        .cs-picture {
            width: calc(657 / 16 * 1em); 
            height: calc(676 / 16 * 1em);
            overflow: hidden;
            border-radius: 50%;
            display: block;
            position: absolute;
            top: 0;
            right: 0;

            img {
                width: 100%;
                height: 100%;
                object-fit: cover;
                position: absolute;
                top: 0;
                left: 0;
            }
        }

        .cs-graphic {
            width: calc(641 / 16 * 1em);
            height: auto;
            position: absolute;
            right: calc(-108 / 16 * 1em);
            top: 0;
            z-index: -1;
        }
    }
}

/* Desktop - 1024px */
@media only screen and (min-width: 64rem) {
    #sbsr-1126 {
        padding: var(--sectionPadding);
        .cs-container {
            max-width: calc(1280 / 16 * 1rem);
            flex-direction: row;
            align-items: center;
            justify-content: space-between;
        }

        .cs-image-group {
            /* reset the scale */
            font-size: min(1.2vw, 1em);
            margin: 0;
            /* sends it to the right in the 2nd position */
            order: 2;
        }

        .cs-content {
            width: 45%;
            /* prevent flexbox from squishing it */
            flex: none;
        }
    }
}

/* Dark Mode */
@media only screen and (min-width: 0rem) {
    body.dark-mode {
        #sbsr-1126 {
            .cs-topper {
                color: var(--secondary);
            }

            .cs-title, .cs-text, .cs-li {
                color: var(--bodyTextColorWhite);
            }
        }
    }
}
                                

/*-- -------------------------- -->
<---       Side By Side         -->
<--- -------------------------- -*/

/* Mobile - 360px */
@media only screen and (min-width: 0rem) {


	#sbsr-692 {
		padding: var(--sectionPadding);
        overflow: hidden;
		position: relative;

		.cs-container {
			width: 100%;
			max-width: calc(1280 / 16 * 1rem);
			margin: auto;
			display: flex;
			flex-direction: column;
			align-items: center;
			/* 48px - 64px */
			gap: clamp(3rem, 6vw, 4rem);
		}

		.cs-content {
			/* set text align to left if content needs to be left aligned */
			text-align: left;
			width: 100%;
			max-width: calc(522 / 16 * 1rem);
			display: flex;
			flex-direction: column;
			/* centers content horizontally, set to flex-start to left align */
			align-items: flex-start;
		}

		.cs-topper {
			font-size: var(--topperFontSize);
			line-height: 1.2em;
			text-transform: uppercase;
			text-align: inherit;
			letter-spacing: 0.1em;
			font-weight: 700;
			color: var(--primary);
			margin-bottom: calc(4 / 16 * 1rem);
			display: block;
		}

		.cs-title {
			font-size: var(--headerFontSize);
			font-weight: 900;
			line-height: 1.2em;
			text-align: inherit;
			max-width: calc(700 / 16 * 1rem);
			margin: 0 0 calc(16 / 16 * 1rem) 0;
			color: var(--headerColor);
			position: relative;
		}

		.cs-text {
			font-size: var(--bodyFontSize);
			line-height: 1.5em;
			text-align: inherit;
			width: 100%;
			max-width: calc(650 / 16 * 1rem);
			margin: 0;
			color: var(--bodyTextColor);
		}

		.cs-color {
			color: var(--primary);
		}

		.cs-text {
			/* Override.  cs-topper cs-title and first cs-text should be removed and put into your global css sheet so it can control every instance of them on your site and is consistent. This selector is a section specific override that stays inside this stitch */
			margin-bottom: calc(16 / 16 * 1rem);
			&:last-of-type {
				margin-bottom: calc(32 / 16 * 1rem);
			}
		}

		.cs-button-solid {
			font-size: calc(16 / 16 * 1rem);
			/* 46px - 56px */
			line-height: clamp(2.875rem, 5.5vw, 3.5rem);
			text-decoration: none;
			font-weight: 700;
			text-align: center;
			margin: 0;
			color: #fff;
			min-width: calc(150 / 16 * 1rem);
			padding: 0 calc(24 / 16 * 1rem);
			background-color: var(--primary);
			border-radius: calc(4 / 16 * 1rem);
			display: inline-block;
			position: relative;
			z-index: 1;
			/* prevents padding from adding to the width */
			box-sizing: border-box;

			&:before {
				content: '';
				position: absolute;
				height: 100%;
				width: 0%;
				background: #000;
				opacity: 1;
				top: 0;
				left: 0;
				z-index: -1;
				border-radius: calc(4 / 16 * 1rem);
				transition: width 0.3s;
			}

			&:hover {
				&:before {
					width: 100%;
				}
			}
		}

		.cs-floater {
			/* 80px - 216px */
			width: clamp(5rem, 9vw, 13.5rem);
			height: auto;
			display: block;
			position: absolute;
			top: 0;
			right: 0;
		}

		.cs-image-group {
			/* scales the whole section down and ties the font size to the vw and stops at 75% of the vale of 1em, changes at desktop */
			font-size: min(2.15vw, 0.75em);
			/* everything inside this box is in ems so we can scale it all down proportionally with a font size */
			width: calc(675 / 16 * 1em);
			height: calc(805 / 16 * 1em);
			/* prevents flexbox from squishing it */
			flex: none;
			position: relative;
		}

		.cs-picture {
			overflow: hidden;
			display: block;
			position: absolute;

			img {
				width: 100%;
				height: 100%;
				object-fit: cover;
				position: absolute;
				top: 0;
				left: 0;
			}
		}

		.cs-picture1 {
			width: calc(542 / 16 * 1em);
			height: calc(647 / 16 * 1em);
			border-radius: calc(285 / 16 * 1em);
			top: 0;
			left: 0;
		}

		.cs-picture2 {
			width: calc(413 / 16 * 1em);
			height: calc(493 / 16 * 1em);
			border-radius: calc(206 / 16 * 1em);
			border: calc(12 / 16 * 1em) solid #fff;
			background-color: #fff;
			bottom: 0;
			right: 0;
		}

		.cs-flower {
			width: calc(363 / 16 * 1em);
			height: auto;
			display: block;
			position: absolute;
			bottom: calc(-30 / 16 * 1em);
			left: calc(-10 / 16 * 1em);
			z-index: -1;
			transform: rotate(-142deg);
		}

		.cs-sense {
			width: calc(81 / 16 * 1em);
			height: auto;
			display: block;
			position: absolute;
			bottom: calc(460 / 16 * 1em);
			right: calc(22 / 16 * 1em);
			transform: rotate(164deg);
		}
	}
}

/* Small Desktop - 1024px */
@media only screen and (min-width: 64rem) {
	#sbsr-692 {
		.cs-container {
			flex-direction: row;
			justify-content: space-between;
		}

		.cs-image-group {
			font-size: min(1.15vw, 1em);
			/* sends it to the right in the 2nd position */
			order: 2;
		}

		.cs-content {
			width: 48%;
		}
	}
}

/* Dark Mode */
@media only screen and (min-width: 0rem) {
	body.dark-mode {
		#sbsr-692 {
			.cs-topper,
			.cs-color {
				color: var(--primaryLight);
			}

			.cs-picture2 {
				border-color: var(--dark);
			}

			.cs-flower {
				opacity: 0.5;
			}

			.cs-sense {
				filter: brightness(150%);
			}

			.cs-title,
			.cs-text {
				color: var(--bodyTextColorWhite);
			}

			.cs-text {
				opacity: 0.8;
			}
		}
	}

	/*-- -------------------------- -->
<---            CTA             -->
<--- -------------------------- -*/

/* Mobile - 360px */
@media only screen and (min-width: 0rem) {

    #cta-1104 {
        width: 100%;
        max-width: calc(1280 / 16 * 1rem);
        margin: var(--sectionPadding);
        margin-left: auto;
        margin-right: auto;
        margin-top: 0;
        /* 16px - 60px */
        padding: calc(60 / 16 * 1rem) clamp(1rem, 7vw, 3.75rem);
        /* prevents padding from affecting height and width */
        box-sizing: border-box;
        border: 1px solid #484848;
        display: flex;
        flex-direction: column;
        align-items: center;
        justify-content: center;
        position: relative;
        z-index: 1;

        .cs-content {
            /* set text align to left if content needs to be left aligned */
            text-align: center;
            width: 100%;
            /* changes to 100% at tablet */
            max-width: calc(400 / 16 * 1rem);
            display: flex;
            flex-direction: column;
            /* centers content horizontally, set to flex-start to left align */
            align-items: center;
            gap: calc(24 / 16 * 1rem);
        }
    
        .cs-title {
            font-size: var(--headerFontSize);
            font-weight: 900;
            line-height: 1.2em;
            text-align: inherit;
            max-width: calc(700 / 16 * 1rem);
            margin: 0 0 calc(16 / 16 * 1rem) 0;
            color: var(--headerColor);
            position: relative;
        }

        .cs-title {
            /* Override.  cs-topper cs-title and first cs-text should be removed and put into your global css sheet so it can control every instance of them on your site and is consistent. This selector is a section specific override that stays inside this stitch */
            width: 100%;
            font-size: calc(31 / 16 * 1rem);
            margin: 0;
            color: var(--bodyTextColorWhite);
        }

        .cs-form {
            width: 100%;
            max-width: calc(725 / 16 * 1rem);
            display: flex;
            flex-direction: column;
            align-items: center;
            justify-content: center;
            gap: calc(16 / 16 * 1rem);
            /* prevents flexbox from squishing it */
            flex: none;
        }

        .cs-input {
            font-size: calc(16 / 16 * 1rem);
            width: 100%;
            height: clamp(2.875rem, 5.5vw, 3.5rem);
            margin: 0;
            padding: 0;
            padding-left: calc(20 / 16 * 1rem);
            border: none;
            /* prevents padding from adding to width and height */
            box-sizing: border-box;
            display: block;
            &::placeholder {
                color: #767676;
            }
        }

        .cs-button-solid {
            font-size: calc(16 / 16 * 1rem);
            /* 46px - 56px */
            line-height: clamp(2.875rem, 5.5vw, 3.5rem);
            text-decoration: none;
	    	font-weight: 700;
	        text-align: center;
            margin: 0;
            color: #fff;
            min-width: calc(150 / 16 * 1rem);
            padding: 0 calc(24 / 16 * 1rem);
            background-color: var(--primary);
            display: inline-block;
            position: relative;
            z-index: 1;
            /* prevents padding from adding to the width */
            box-sizing: border-box;

            &:before {
                content: '';
                position: absolute;
                height: 100%;
                width: 0%;
                background: #000;
                opacity: 1;
                top: 0;
                left: 0;
                z-index: -1;
                transition: width .3s;
            }

            &:hover {
                &:before {
                    width: 100%;
                }
            }
        }

        .cs-submit {
            width: 100%;
            border: none;
            transition: color .3s;
            &:before {
                background-color: #fff;
            }

            &:hover {
                color: var(--primary);
            }
        }
    }

}

/* Tablet - 768px */
@media only screen and (min-width: 48rem) {
    #cta-1104 {
        .cs-container {
            padding-left: calc(60 / 16 * 1rem);
            padding-right: calc(60 / 16 * 1rem);
        }
        .cs-content {
            max-width: 100%;
        }

        .cs-form {
            flex-direction: row;
        }

        .cs-input {
            width: 100%;
            max-width: calc(525 / 16 * 1rem);
        }

        .cs-submit {
            width: auto;
            min-width: calc(190 / 16 * 1rem);
            /* prevents flexbox from squishing it */
            flex: none;
        }
    }
}

/* Desktop - 1300px */
@media only screen and (min-width: 81.25rem) {
    #cta-1104 {
        .cs-content {
            flex-direction: row;
        }

        .cs-form {
            width: 60%;
        }
    }
}

/*-- -------------------------- -->
<---          Footer            -->
<--- -------------------------- -*/

/* Mobile - 360px */
@media only screen and (min-width: 0rem) {

    #cs-footer-1104 {
        /* remove the font family so the Stitch inherits the fonts from your global stylesheet */
        font-family: 'Roboto', 'Arial', sans-serif;
        padding: var(--sectionPadding);
        position: relative;
   
        .cs-container {
            width: 100%;
            /* reset on desktop */
            max-width: calc(700 / 16 * 1rem);
            margin: auto;
            display: flex;
            justify-content: flex-start;
            align-items: flex-start;
            flex-wrap: wrap;
            gap: calc(40 / 16 * 1rem);
        }

        .cs-logo-group {
            /* takes up all the space, lets the other ul's wrap below it */
            width: 100%;
            position: relative;
        }

        .cs-logo {
            width: calc(197 / 16 * 1rem);
            height: auto;
            display: block;
            margin-bottom: calc(24 / 16 * 1rem);
        }

        .cs-logo-img {
            width: 100%;
            height: auto;

            &.dark {
                display: none;
            }
        }

        .cs-text {
            /* 14px - 16px */
            font-size: clamp(.875rem, 2.5vw, 1rem);
            line-height: 1.5em;
            margin: 0;
            width: 78%;
            /* changes to 305px at desktop */
            max-width: calc(420 / 16 * 1rem);
            color: var(--bodyTextColorWhite);
        }

        /* Navigation Links */
        .cs-nav {
            width: 100%;
            padding: 0;
            margin: 0;
            display: flex;
            justify-content: center;
            align-items: flex-start;
            flex-direction: column;
            gap: calc(12 / 16 * 1rem);
        }

        .cs-nav-li {
            list-style: none;
            display: flex;
            justify-content: flex-start;
            align-items: flex-start;
        }

        .cs-header {
            font-size: calc(16 / 16 * 1rem);
            line-height: 1.2em;
            text-transform: uppercase;
            font-weight: 700;
            margin-bottom: calc(12 / 16 * 1rem);
            color: var(--bodyTextColorWhite);
            position: relative;
            display: block;
        }

        .cs-nav-link {
            font-size: calc(16 / 16 * 1rem);
            text-decoration: none;
            line-height: 1.5em;
            color: var(--bodyTextColorWhite);
            position: relative;
            display: inline-block;
            transition: color .3s;

            &:before {
                /* underline */
                content: '';
                width: 0%;
                height: calc(2 / 16 * 1rem);
                background: currentColor;
                opacity: 1;
                position: absolute;
                display: block;
                bottom: calc(-2 / 16 * 1rem);
                left: 0;
                transition: width .3s;
            }

            &:hover {
                color: var(--secondary);
                &:before {
                    width: 100%;
                }
            }
        }

        .cs-icon {
            width: calc(24 / 16 * 1rem);
            height: auto;
            margin-right: calc(12 / 16 * 1rem);
        }

        .cs-bottom {
            max-width: calc(1280 / 16 * 1rem);
            margin: auto;
            margin-top: calc(32 / 16 * 1rem);
            padding-top: calc(24 / 16 * 1rem);
            border-top: 1px solid #484848;
            display: flex;
            justify-content: center;
            align-items: center;
        }

        .cs-copyright, .cs-copyright-link {
            font-size: calc(16 / 16 * 1rem);
            line-height: 1.5em;
            color: var(--bodyTextColorWhite);
        }

        .cs-copyright-link {
            text-decoration: none;
            transition: color .3s;
            &:hover {
                color: var(--secondary);
            }
        }

        .cs-background {
            width: 100%;
            height: 100%;
            display: block;
            position: absolute;
            top: 0;
            left: 0;
            z-index: -1;

            &:before {
                /* background color overlay */
                content: '';
                position: absolute;
                display: block;
                height: 100%;
                width: 100%;
                background: -moz-linear-gradient(left,  rgba(26,26,26,0.94) 0%, rgba(26,26,26,1) 100%); /* FF3.6-15 */
                background: -webkit-linear-gradient(left,  rgba(26,26,26,0.94) 0%,rgba(26,26,26,1) 100%); /* Chrome10-25,Safari5.1-6 */
                background: linear-gradient(to right,  rgba(26,26,26,0.94) 0%,rgba(26,26,26,1) 100%); /* W3C, IE10+, FF16+, Chrome26+, Opera12+, Safari7+ */
                opacity: .97;
                top: 0;
                left: 0;
                z-index: 1;
            }

            img {
                position: absolute;
                top: 0;
                left: 0;
                height: 100%;
                width: 100%;
                /* Makes img tag act as a background image */
                object-fit: cover;
            }
        }
    }
}

/* Tablet - 768px */
@media only screen and (min-width: 48rem) {
    #cs-footer-1104 {
        .cs-container {
            row-gap: 0;
            flex-direction: row;
            justify-content: space-between;
            row-gap: calc(40 / 16 * 1rem);
        }

        .cs-nav {
            width: auto;
        }
    }
}

/* Small Desktop - 1024px */
@media only screen and (min-width: 64rem) {
    #cs-footer-1104 {
        .cs-container {
            max-width: calc(1280 / 16 * 1rem);
            flex-wrap: nowrap;
            /* align everything to the right */
            justify-content: flex-end;
            column-gap: calc(84 / 16 * 1rem);
        }

        .cs-logo-group {
            width: 30%;
            max-width: calc(387 / 16 * 1rem);
            /* pushes away from everything to the right */
            margin-right: auto;
        }

        .cs-text {
            width: 100%;
        }
    }
}
                                
}
                                